*,
::before,
::after {
  padding: 0;
  margin: 0;
}
html {
  font-size: 62.5%;
  box-sizing: border-box;
}
body {
  font-family: Baskervville, serif;
  color: linen;
  background-color: rgb(20, 30, 40);
}
h1 {
  font-family: Anton, sans-serif;
}
h2,
h3,
h4,
h5,
h6 {
  font-family: Raleway, sans-serif;
}
a {
  text-decoration: none;
  color: linen;
}

/*Now I can style the layout of the grid. CSS Grid is similar to Flexbox in that it has a special property for both the parent and child elements.

In this case, the parent element is the main element. I'll set the content to have a three-column layout by adding a grid-template-columns property with a value of 1fr 94rem 1fr. This will create three columns where the middle column is 94rem wide, and the first and last columns are both 1 fraction of the remaining space in the grid container.*/

main {
  display: grid;
  grid-template-columns: 1fr 94rem 1fr;
}
